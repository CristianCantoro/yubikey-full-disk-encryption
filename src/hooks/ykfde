#!/usr/bin/bash

CONFFILE="/etc/ykfde.conf"

run_hook() {
    local _timeout=10              # default value for YKFDE_YUBIKEY_INSERT_TIMEOUT. -1 = unlimited
    local _secret_enter_trials=5 # default value for YKFDE_SECRET_ENTER_TRIALS.  -1 = unlimited
    local _secret_enter_trials_str;

    local _key                     # key used to 'cryptsetup luksOpen'
    local _luksdev                 # device to unlock with 'cryptsetup luksOpen'

    local _starttime               # to determine if a timeout occured
    local _endtime


    . "$CONFFILE"
    if [ -z "$YKFDE_DISK_UUID" -o -z "$YKFDE_LUKS_NAME" ]; then
        echo "ERROR: $CONFFILE must provide YKFDE_DISK_UUID /and/ YKFDE_LUKS_NAME."
        exit 1
    fi
    _luksdev="/dev/disk/by-uuid/$YKFDE_DISK_UUID"

    if [ -e "$_luksdev" ]; then
      echo "ERROR: ykfde can't find luks device '$_luksdev'. Please check YKFDE_DISK_UUID variable in '$CONFFILE'."
      exit 1;
    fi

    [ -n "$YKFDE_YUBIKEY_INSERT_TIMEOUT" ] && _timeout=$YKFDE_YUBIKEY_INSERT_TIMEOUT
    [ -n "$YKFDE_SECRET_ENTER_TRIALS" ] && _secret_enter_trials=$YKFDE_SECRET_ENTER_TRIALS
    [ $_secret_enter_trials -lt 0 ] && _secret_enter_trials_str="unlimited" || _secret_enter_trials_str="$_secret_enter_trials"

    udevadm settle
    modprobe -a -q dm-crypt >/dev/null 2>&1

    if [ -n "$YKFDE_CHALLENGE" ]; then
        # Challenge is provided so let's try yubikey
        _starttime=$(date +%s)
        echo "Waiting $_timeout seconds for YubiKey (don't forget to press its button if necessary)..."
        while [ -z "$_key" ]; do
            _endtime=$(date +%s)
            _key="$(ykchalresp $YKFDE_CHALLENGE 2>/dev/null | tr -d '\n' || true)"
            if [ $_timeout -eq -1 -o $(( $_endtime - $_starttime )) -le $_timeout ]; then
                sleep 1
            else
                break
            fi
        done

        if [ -n "$_key" -a "$YKFDE_CHALLENGE_PASSWORD_NEEDED" = "1" ]; then
          local _pw;
          printf "YubiKay Challenge-Response AND Password needed to unlock the disk $YKFDE_DISK_UUID ($YKFDE_LUKS_NAME).\nEnter password ($_secret_enter_trials_str trials): "
          _i=$_secret_enter_trials;
          while [ -z "$_pw" -a $_i -ne 0 ]; do
            read -s _pw;
            [ $_i -gt 0 ] && _i=$(( $_i - 1 ))
          done
          _key="$_key$_pw"
        fi
    fi

    if [ -z "$_key" ]; then
        printf "Fallback to password to unlock the disk $YKFDE_DISK_UUID ($YKFDE_LUKS_NAME).\nEnter passphrase ($_secret_enter_trials_str trials): "

        _i=$_secret_enter_trials;
        while [ -z "$_pw" -a $_i -ne 0 ]; do
          read -s _key
            [ $_i -gt 0 ] && _i=$(( $_i - 1 ))
        done
    fi

    echo "Decrypting..."

    printf "$_key"| cryptsetup luksOpen "$_luksdev" $YKFDE_LUKS_NAME -
    sleep 5
}
